/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution 
{
public:
    ListNode* removeElements(ListNode* head, int val) 
    {
        if(!head)
            return nullptr;
        
        ListNode* iter = head;
        ListNode* prev = nullptr;

        while(iter)
        {
            if(iter->val == val)
            {
                if(prev)
                {
                    prev->next = iter->next;
                    iter = iter->next;
                }
                else
                {
                    head = iter->next;
                    iter = iter->next;
                }  
                
            }
            else
            {
                prev = iter; 
                iter = iter->next;
            }
        }

        return head;
    }
};
