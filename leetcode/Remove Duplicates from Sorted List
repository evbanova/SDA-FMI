/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution 
{
public:
    ListNode* deleteDuplicates(ListNode* head) 
    {
        if(!head)
            return nullptr;
        
        std::unordered_set<int> visited;
        ListNode* iter = head;
        ListNode* prev = nullptr;

        while(iter)
        {
            if(visited.count(iter->val))
            {
                ListNode* dummy = iter;
                prev->next = iter->next;
                iter = iter->next;
                delete dummy;
            }
            else
            {
                visited.insert(iter->val);
                prev = iter;
                iter = iter->next;
            }
        }

        return head;
    }
};
