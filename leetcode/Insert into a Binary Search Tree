/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution 
{
public:
    TreeNode* insertIntoBST(TreeNode* root, int val) 
    {
        if (!root)
        {
            root = new TreeNode(val);
            return root;
        }
            

        TreeNode* iter = root;

        while (iter)
        {
            
            if (iter->val > val)
            {
                if (!iter->left)
                {
                    iter->left = new TreeNode(val);
                    break; 
                }
                iter = iter->left;
            }

            else
            {
                if (!iter->right)
                {
                    iter->right = new TreeNode(val);
                    break; 
                }
                iter = iter->right; 
            }
                   
        }


        return root;
    }
};
