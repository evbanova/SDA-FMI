class Solution 
{
public:

    void dfs(vector<vector<int>>& isConnected, int curr, vector<bool>& visited)
    {
        visited[curr] = true;

        for(int i=0; i < isConnected.size(); i++)
        {
            if(isConnected[curr][i] && !visited[i])
                dfs(isConnected, i, visited);
        }
    }

    int findCircleNum(vector<vector<int>>& isConnected) 
    {
        int n = isConnected.size();
        vector<bool> visited(isConnected.size(), false);

        int counter = 0;

        for(int i =0; i<n; i++)
        {
            if(!visited[i])
            {
                counter++;
                dfs(isConnected, i, visited);
            }
        }

        return counter;    
    }
};
